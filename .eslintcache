[{"/home/gerald/Desktop/govtech-hackathon2021/src/index.js":"1","/home/gerald/Desktop/govtech-hackathon2021/src/App.js":"2","/home/gerald/Desktop/govtech-hackathon2021/src/reportWebVitals.js":"3","/home/gerald/Desktop/govtech-hackathon2021/src/components/LeftPanel.js":"4","/home/gerald/Desktop/govtech-hackathon2021/src/services/ApiService.js":"5","/home/gerald/Desktop/govtech-hackathon2021/src/components/RightPanel.js":"6","/home/gerald/Desktop/govtech-hackathon2021/src/components/Loading.js":"7"},{"size":500,"mtime":1611028831020,"results":"8","hashOfConfig":"9"},{"size":2050,"mtime":1611195319609,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1611028831020,"results":"11","hashOfConfig":"9"},{"size":2225,"mtime":1611195255665,"results":"12","hashOfConfig":"9"},{"size":264,"mtime":1611121017172,"results":"13","hashOfConfig":"9"},{"size":630,"mtime":1611195544931,"results":"14","hashOfConfig":"9"},{"size":611,"mtime":1611202214068,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1vzu8dn",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gerald/Desktop/govtech-hackathon2021/src/index.js",[],["32","33"],"/home/gerald/Desktop/govtech-hackathon2021/src/App.js",[],"/home/gerald/Desktop/govtech-hackathon2021/src/reportWebVitals.js",[],"/home/gerald/Desktop/govtech-hackathon2021/src/components/LeftPanel.js",["34"],"import React, { useState } from 'react';\nimport '../Panel.css';\nimport { sendUpload } from \"../services/ApiService\"\n\nconst LeftPanel = ({setLoading, file, setFile, setProcessedImage, setNotif}) => {\n    \n    const uploadAnImage = () => {\n        document.getElementById(\"selectImage\").click()\n    }\n\n    const fileSelectHandler = (event) => {\n        setProcessedImage(\"\")\n        if (event.target.files[0])\n            setFile(event.target.files[0]);\n        else\n            setFile(\"\")\n    }\n\n    const confirmSendUpload = async () => {\n        \n        setLoading(true)\n        try {\n            const response = await sendUpload(file)\n            setProcessedImage(response)\n            \n            setNotif({\n                message: 'Image processed succesfully!',\n                error: false\n            })\n            setTimeout(() => {\n                setNotif(null)\n              }, 5000)\n        }    \n        catch (exception) {\n            // setError(true)\n            setNotif({\n                message: 'Exception occured while uploading the image!',\n                error: true\n            })\n            console.log(exception)\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <div>\n            {\n                file !== \"\" ? \n                <div>\n                    <h3>Original image</h3>\n                    {/* <img alt=\"uploaded_image\" src={props.initialImage} /> */}\n                    {file && <ImageThumb image={file} />}\n                    <div className=\"uploadButton\" onClick={confirmSendUpload} >\n                        <p>Process this image</p>\n                    </div>\n                </div>\n                : null\n            }\n            <div className={ file ? \"dullButton\": \"uploadButton\"} onClick={uploadAnImage}>\n                <input id=\"selectImage\" onChange={fileSelectHandler} type=\"file\" accept=\"image/*\" hidden />\n                <p > {file === \"\" ? \"Upload an\": \"Replace with another\"} image</p>\n            </div> \n        </div>\n    )\n}\n\n/**\n * Component to display thumbnail of image.\n */\nconst ImageThumb = ({ image }) => {\n    return <img src={URL.createObjectURL(image)} alt={image.name} />;\n  };\n\nexport default LeftPanel","/home/gerald/Desktop/govtech-hackathon2021/src/services/ApiService.js",[],"/home/gerald/Desktop/govtech-hackathon2021/src/components/RightPanel.js",[],"/home/gerald/Desktop/govtech-hackathon2021/src/components/Loading.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":25},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]