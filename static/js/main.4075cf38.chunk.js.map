{"version":3,"sources":["services/ApiService.js","components/LeftPanel.js","components/Warning.js","components/RightPanel.js","components/Loading.js","components/Webcam.js","App.js","reportWebVitals.js","index.js"],"names":["sendUpload","file","a","data","FormData","append","axios","post","END_POINT","response","ImageThumb","image","console","log","id","src","URL","createObjectURL","alt","name","e","LeftPanel","loading","setLoading","setFile","setProcessedImage","processed_image","setNotif","setTakingOne","setIssues","confirmSendUpload","image_url","issues","message","error","setTimeout","className","onClick","onChange","event","target","files","type","accept","hidden","document","getElementById","click","Warning","issue","style","fontSize","icon","faExclamationTriangle","color","paddingRight","RightPanel","map","i","textDecoration","href","download","faDownload","paddingLeft","LoadingComponent","useState","count","setCount","useEffect","timer","setInterval","length","clearInterval","height","width","videoConstraints","facingMode","WebcamComponent","webcamRef","React","useRef","capture","useCallback","imageSrc","current","getScreenshot","fetch","then","res","blob","File","Math","random","toString","substr","ref","audio","screenshotQuality","screenshotFormat","App","notif","takingOne","processedImage","faArrowCircleRight","Webcam","Loading","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4075cf38.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst END_POINT = process.env.NODE_ENV === \"development\" ? process.env.REACT_APP_LOCAL_ENDPOINT : process.env.REACT_APP_PROD_ENDPOINT\r\nexport const sendUpload  = async (file) => {\r\n    const data = new FormData()\r\n    data.append('user_file', file)\r\n    const response = await axios.post(END_POINT+\"/upload-file\", data)\r\n    return response.data\r\n}\r\n\r\nexport const startDownload = async (url) => {\r\n    const resp = await axios.get(url);\r\n    console.log(resp)\r\n    return resp\r\n}","import React, { useState } from 'react';\r\nimport '../Panel.css';\r\nimport { sendUpload } from \"../services/ApiService\"\r\n\r\nconst LeftPanel = ({loading, setLoading, file, setFile, processed_image, setProcessedImage, setNotif, setTakingOne, setIssues}) => {\r\n    \r\n    const uploadAnImage = () => {\r\n        document.getElementById(\"selectImage\").click()\r\n        setTakingOne(false)\r\n    }\r\n\r\n    const fileSelectHandler = (event) => {\r\n        setProcessedImage(\"\")\r\n        if (event.target.files[0])\r\n            setFile(event.target.files[0]);\r\n        else\r\n            setFile(\"\")\r\n    }\r\n\r\n    const confirmSendUpload = async () => {\r\n        setProcessedImage(\"\")\r\n        setLoading(true)\r\n        setIssues([])\r\n        try {\r\n            const response = await sendUpload(file)\r\n            setProcessedImage(response.image_url)\r\n            setIssues(response.issues)\r\n            setNotif({\r\n                message: 'Image processed succesfully!',\r\n                error: false\r\n            })\r\n            setTimeout(() => {\r\n                setNotif(null)\r\n              }, 5000)\r\n        }    \r\n        catch (exception) {\r\n            // setError(true)\r\n            setNotif({\r\n                message: exception.message || 'Exception occured while uploading the image!',\r\n                error: true\r\n            })\r\n            setTimeout(() => {\r\n                setNotif(null)\r\n              }, 5000)\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const webcamUpload = () => {\r\n        setTakingOne(true)\r\n        setFile(\"\")\r\n        setProcessedImage(\"\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                file !== \"\" ? \r\n                <div>\r\n                    <h3>Original image</h3>\r\n                    {/* <img alt=\"uploaded_image\" src={props.initialImage} /> */}\r\n                    {file && <ImageThumb image={file} />}\r\n                    <div className={(file && loading) ? \"dullButton\": \"processButton\"} onClick={(file && loading) ? null: confirmSendUpload} >\r\n                        <p>{(file && loading) ? \"Disabled while processing\": \"Process this image\"}</p>\r\n                    </div>\r\n                </div>\r\n                : null\r\n            }\r\n            {\r\n                !(file && loading) ?\r\n                <div>\r\n                    <input id=\"selectImage\" onChange={fileSelectHandler} type=\"file\" accept=\".jpg,.jpeg,.jfif,.png,.jpe,.jif,.jfi,.webp\"  hidden />\r\n                    <div className={ file ? \"dullButton\": \"uploadButton\"} onClick={uploadAnImage}>\r\n                        <p> {file === \"\" ? \"Upload \": \"Upload new \"} image </p>\r\n                    </div> \r\n                    <div className={ file ? \"dullButton\": \"uploadButton\"} onClick={webcamUpload}>\r\n                        <p> {file === \"\" ? \"Take a \": \"Take a new \"} picture</p>\r\n                    </div> \r\n                </div>\r\n                :\r\n                <div>\r\n                    <div className=\"dullButton\" >\r\n                        <p> Disabled while processing... </p>\r\n                    </div> \r\n                    <div className=\"dullButton\">\r\n                        <p> Disabled while processing... </p>\r\n                    </div> \r\n                </div>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * Component to display thumbnail of image.\r\n */\r\nconst ImageThumb = ({ image }) => {\r\n    console.log(image)\r\n    try {\r\n        return <img id=\"leftImage\" src={URL.createObjectURL(image)} alt={image.name} />;\r\n    } catch(e) {\r\n        return <img id=\"leftImage\" src={image} alt={image.name} />;\r\n    }\r\n    \r\n  };\r\n\r\nexport default LeftPanel","import React from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Warning = ({issue}) => {\r\n    return (\r\n        <div className=\"error\">\r\n            <span style={{fontSize: \"11pt\"}}>\r\n                <FontAwesomeIcon icon={faExclamationTriangle} style={{color: \"red\", fontSize: \"10pt\", paddingRight: \"10px\"}}/>\r\n                Warning: {issue}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Warning","import React from \"react\"\r\nimport '../Panel.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faDownload } from '@fortawesome/free-solid-svg-icons'\r\nimport Warning from \"./Warning\"\r\n\r\nconst RightPanel = ({processed_image, issues}) => {\r\n\r\n    return (\r\n        <div>\r\n            <h3>Processed image</h3>\r\n            <img id=\"rightImage\" alt={processed_image} src={processed_image}/>\r\n            {\r\n                issues.map((issue, i) => \r\n                    <Warning issue={issue} key={i} />\r\n                )\r\n            }\r\n            <a style={{textDecoration: \"none\", color: \"black\"}} href={processed_image} target=\"_blank\" download>\r\n                <div className=\"uploadButton\">\r\n                    <p>Download \r\n                        <FontAwesomeIcon icon={faDownload} style={{color: \"grey\", fontSize: \"14pt\", paddingLeft: \"15px\"}}/>\r\n                    </p>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default RightPanel","import React, { useState, useEffect } from \"react\"\r\nimport Loader from 'react-loader-spinner'\r\n\r\n\r\n\r\nconst LoadingComponent = () => {\r\n\r\n    const [count, setCount] = useState(\".\")\r\n   \r\n   useEffect(() => {\r\n    const timer = setInterval(() => count.length > 3 ? setCount(\".\"): setCount(count + \".\"), 500)\r\n    return () => clearInterval(timer)\r\n   })\r\n\r\n    return (\r\n        <div>\r\n            <p>Processing {count}</p>\r\n            <Loader\r\n            type=\"Circles\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default LoadingComponent","import Webcam from \"react-webcam\"\r\nimport React from \"react\"\r\nimport \"../Panel.css\"\r\n\r\nconst videoConstraints = {\r\n    facingMode: \"user\",\r\n    height: 400\r\n  };\r\n\r\nconst WebcamComponent = ({setFile, setTakingOne}) => {\r\n\r\n    const webcamRef = React.useRef(null);\r\n \r\n    const capture = React.useCallback(\r\n        () => {\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        // var base64ImageContent = imageSrc.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n        // const blob = base64ToBlob(base64ImageContent, \"image/png\")\r\n        // setFile(blob)\r\n        fetch(imageSrc)\r\n        .then(res => res.blob())\r\n        .then(blob => {\r\n            const file = new File([blob], \"webcam_file\" + Math.random().toString(36).substr(2, 8) + \".png\",{ type: \"image/png\" })\r\n            setFile(file)\r\n        })\r\n        setTakingOne(false)\r\n        },\r\n        [webcamRef]\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Webcam ref={webcamRef} audio={false} screenshotQuality={1} screenshotFormat=\"image/png\" videoConstraints={videoConstraints} />\r\n\r\n            <div className=\"uploadButton\" onClick={capture}>Take a photo</div>\r\n            <div className=\"dullButton\" onClick={() => { setTakingOne(false) }}>Cancel</div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default WebcamComponent","import './App.css';\r\nimport React, { useState } from \"react\"\r\nimport LeftPanel from \"./components/LeftPanel\"\r\nimport RightPanel from \"./components/RightPanel\"\r\nimport LoadingComponent from \"./components/Loading\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowCircleRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { BrowserRouter } from \"react-router-dom\"\r\nimport WebcamComponent from './components/Webcam';\r\n\r\nfunction App() {\r\n\r\n  const [processed_image, setProcessedImage] = useState(\"\");\r\n  const [file, setFile] = React.useState(\"\");\r\n  const [notif, setNotif] = useState(null);\r\n  const [loading, setLoading] = useState(false)\r\n  const [takingOne, setTakingOne] = useState(false)\r\n  const [issues, setIssues] = useState([])\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <h1>Passport Photo Tool 📷</h1>\r\n        {\r\n          notif !== null \r\n          ?\r\n          <div className=\"topPanel\">\r\n            <div className={notif.error ? \"notif error\": \"notif success\"}>\r\n                <p>\r\n                  {notif.message}\r\n                </p>\r\n            </div>\r\n          </div>\r\n          :\r\n          null\r\n        }\r\n        \r\n\r\n        <div className=\"split leftPanel\"> \r\n          <div className=\"centered\">\r\n            <LeftPanel loading={loading} setLoading={setLoading} file={file} setFile={setFile} processedImage={processed_image} setProcessedImage={setProcessedImage} setNotif={setNotif} setTakingOne={setTakingOne} setIssues={setIssues} />\r\n          </div>\r\n        </div>\r\n        {\r\n          processed_image ? \r\n          <div>\r\n            <div className=\"middleArrow\">\r\n              <FontAwesomeIcon icon={faArrowCircleRight} style={{color: \"green\", fontSize: \"45pt\"}}/>\r\n            </div>\r\n\r\n            <div className=\"split rightPanel\">\r\n              <div className=\"centered\">\r\n                <RightPanel processed_image={processed_image} issues={issues} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          :\r\n          <div className=\"split rightPanel\">\r\n            <div className=\"centered\">\r\n              {\r\n                takingOne ?\r\n                <WebcamComponent setFile={setFile} setTakingOne={setTakingOne} />\r\n                :\r\n                file === \"\" ? \r\n                <p>Upload or an image or take one from your camera to be processed</p>\r\n                :\r\n                loading ?\r\n                <LoadingComponent />\r\n                :\r\n                <p>Click on process to view results or replace the current selection</p>\r\n              }\r\n              \r\n            </div>\r\n          </div>\r\n        }\r\n        \r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}