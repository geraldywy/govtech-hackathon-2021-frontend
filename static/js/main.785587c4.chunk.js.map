{"version":3,"sources":["services/ApiService.js","components/LeftPanel.js","components/RightPanel.js","components/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["sendUpload","file","a","data","FormData","append","axios","post","END_POINT","response","ImageThumb","image","id","src","URL","createObjectURL","alt","name","LeftPanel","setLoading","setFile","setProcessedImage","setNotif","confirmSendUpload","message","error","setTimeout","console","log","className","onClick","document","getElementById","click","onChange","event","target","files","type","accept","hidden","RightPanel","processed_image","style","textDecoration","color","href","download","icon","faDownload","fontSize","paddingLeft","LoadingComponent","useState","count","setCount","useEffect","timer","setInterval","length","clearInterval","height","width","App","React","notif","loading","faArrowCircleRight","Loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.785587c4.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst END_POINT = process.env.NODE_ENV === \"development\" ? process.env.REACT_APP_LOCAL_ENDPOINT : process.env.REACT_APP_PROD_ENDPOINT\r\nexport const sendUpload  = async (file) => {\r\n    const data = new FormData()\r\n    data.append('user_file', file)\r\n    const response = await axios.post(END_POINT+\"/upload-file\", data)\r\n    return response.data\r\n}\r\n\r\nexport const startDownload = async (url) => {\r\n    const resp = await axios.get(url);\r\n    console.log(resp)\r\n    return resp\r\n}","import React, { useState } from 'react';\r\nimport '../Panel.css';\r\nimport { sendUpload } from \"../services/ApiService\"\r\n\r\nconst LeftPanel = ({setLoading, file, setFile, setProcessedImage, setNotif}) => {\r\n    \r\n    const uploadAnImage = () => {\r\n        document.getElementById(\"selectImage\").click()\r\n    }\r\n\r\n    const fileSelectHandler = (event) => {\r\n        setProcessedImage(\"\")\r\n        if (event.target.files[0])\r\n            setFile(event.target.files[0]);\r\n        else\r\n            setFile(\"\")\r\n    }\r\n\r\n    const confirmSendUpload = async () => {\r\n        \r\n        setLoading(true)\r\n        try {\r\n            const response = await sendUpload(file)\r\n            setProcessedImage(response)\r\n            \r\n            setNotif({\r\n                message: 'Image processed succesfully!',\r\n                error: false\r\n            })\r\n            setTimeout(() => {\r\n                setNotif(null)\r\n              }, 5000)\r\n        }    \r\n        catch (exception) {\r\n            // setError(true)\r\n            setNotif({\r\n                message: 'Exception occured while uploading the image!',\r\n                error: true\r\n            })\r\n            console.log(exception)\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                file !== \"\" ? \r\n                <div>\r\n                    <h3>Original image</h3>\r\n                    {/* <img alt=\"uploaded_image\" src={props.initialImage} /> */}\r\n                    {file && <ImageThumb image={file} />}\r\n                    <div className=\"uploadButton\" onClick={confirmSendUpload} >\r\n                        <p>Process this image</p>\r\n                    </div>\r\n                </div>\r\n                : null\r\n            }\r\n            <div className={ file ? \"dullButton\": \"uploadButton\"} onClick={uploadAnImage}>\r\n                <input id=\"selectImage\" onChange={fileSelectHandler} type=\"file\" accept=\"image/*\" hidden />\r\n                <p > {file === \"\" ? \"Upload an\": \"Replace with another\"} image</p>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * Component to display thumbnail of image.\r\n */\r\nconst ImageThumb = ({ image }) => {\r\n    return <img id=\"leftImage\" src={URL.createObjectURL(image)} alt={image.name} />;\r\n  };\r\n\r\nexport default LeftPanel","import React from \"react\"\r\nimport '../Panel.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faDownload } from '@fortawesome/free-solid-svg-icons'\r\nimport { startDownload } from '../services/ApiService'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst RightPanel = ({processed_image}) => {\r\n\r\n    return (\r\n        <div>\r\n            <h3>Cropped image</h3>\r\n            <img id=\"rightImage\" alt={processed_image} src={processed_image}/>\r\n            <a style={{textDecoration: \"none\", color: \"black\"}} href={processed_image} target=\"_blank\" download>\r\n                <div className=\"uploadButton\">\r\n                    <p>Download \r\n                        <FontAwesomeIcon icon={faDownload} style={{color: \"grey\", fontSize: \"14pt\", paddingLeft: \"15px\"}}/>\r\n                    </p>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default RightPanel","import React, { useState, useEffect } from \"react\"\r\nimport Loader from 'react-loader-spinner'\r\n\r\n\r\n\r\nconst LoadingComponent = () => {\r\n\r\n    const [count, setCount] = useState(\".\")\r\n   \r\n   useEffect(() => {\r\n    const timer = setInterval(() => count.length > 3 ? setCount(\".\"): setCount(count + \".\"), 500)\r\n    return () => clearInterval(timer)\r\n   })\r\n\r\n    return (\r\n        <div>\r\n            <p>Processing {count}</p>\r\n            <Loader\r\n            type=\"Circles\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default LoadingComponent","import './App.css';\r\nimport React, { useState } from \"react\"\r\nimport LeftPanel from \"./components/LeftPanel\"\r\nimport RightPanel from \"./components/RightPanel\"\r\nimport LoadingComponent from \"./components/Loading\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowCircleRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { BrowserRouter } from \"react-router-dom\"\r\n\r\nfunction App() {\r\n\r\n  const [processed_image, setProcessedImage] = useState(\"\");\r\n  const [file, setFile] = React.useState(\"\");\r\n  const [notif, setNotif] = useState(null);\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <h1>Passport cropping tool</h1>\r\n        {\r\n          notif !== null \r\n          ?\r\n          <div className=\"topPanel\">\r\n            <div className={notif.error ? \"notif error\": \"notif success\"}>\r\n                <p>\r\n                  {notif.message}\r\n                </p>\r\n            </div>\r\n          </div>\r\n          :\r\n          null\r\n        }\r\n        \r\n\r\n        <div className=\"split leftPanel\"> \r\n          <div className=\"centered\">\r\n            <LeftPanel setLoading={setLoading} file={file} setFile={setFile} setProcessedImage={setProcessedImage} setNotif={setNotif} />\r\n          </div>\r\n        </div>\r\n        {\r\n          processed_image ? \r\n          <div>\r\n            <div className=\"middleArrow\">\r\n              <FontAwesomeIcon icon={faArrowCircleRight} style={{color: \"green\", fontSize: \"45pt\"}}/>\r\n            </div>\r\n\r\n            <div className=\"split rightPanel\">\r\n              <div className=\"centered\">\r\n                <RightPanel processed_image={processed_image} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          :\r\n          <div className=\"split rightPanel\">\r\n            <div className=\"centered\">\r\n              {\r\n                file === \"\" ? \r\n                <p>Upload an image to be processed</p>\r\n                :\r\n                loading ?\r\n                <LoadingComponent />\r\n                :\r\n                <p>Click on process to view results or replace the current selection</p>\r\n              }\r\n              \r\n            </div>\r\n          </div>\r\n        }\r\n        \r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}